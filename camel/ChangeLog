2004-01-23  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-folder.c (IMAP_SMALL_BODY_SIZE):
	removed the meaningless fixme, a butt-retrieved-number is as good
	as any in this case.
	(imap_get_message): revert peterw's change of 2002-07-15, instead
	of checking for online mode here, let get_message do it when you
	retrieve the parts.  This lets a multi-fetch (i.e. large) message
	work more betterer in offline mode.

2004-01-22  Jeremy Katz  <katzj@redhat.com>

	* camel-mime-part.c: Fix prototype to be consistent.

2004-01-21  Not Zed  <NotZed@Ximian.com>

	** See bug #52996.

	* camel-data-cache.c (camel_data_cache_add): put a do-loop around
	the object_bag_reserve stuff, otherwise we can add/abort out of
	sync (i.e. when object_bag_reserve returned a pointer we mustn't
	call add/abort).

	* camel-object.c (camel_object_bag_*): Added some inline doco.

2004-01-20  Not Zed  <NotZed@Ximian.com>

	** See bug #52817.

	* camel-session.c (camel_session_get_password): merged reprompt
	and secret into a flags field, and add more options.  Fixed all
	callers.

	** See bug #52899.

	* camel-gpg-context.c (gpg_ctx_parse_status): use need_id as the
	password key, not userid.

2004-01-19  Siviaah Nallagatla <snallagatla@novell.com>
                                                                                                                             
        * providers/groupwise/camel-gw-listener.c ( remove_calender_tasks_sources,
        modify_calender_tasks_sources) : add port and "/soap" to source uri

2004-01-19  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (change_folder): use a CamelURL to properly
	encode the url we generate.
	(vee_get_folder_info): ditto.
	(vee_get_folder_info): removed unused variable/warning.

	* camel-session.c (vee_provider): Update the provider flags for
	URL_FRAGMENT_IS_PATH.

	* providers/imapp/camel-imapp-utils.c (imap_parse_addfress_list):
	namespaces fixes for HEADER_ADDRESS*

2004-01-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_sync_online): Limit the
	flags we set (or unset) to the folder's permanent flags.

2004-01-16  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (camel_mime_message_build_mbox_from): Same.

	* camel-internet-address.c (internet_decode): Same.

	* camel-mime-utils.[c,h]: Namespaced camel_header_address_t enums
	s/HEADER_ADDRESS_/CAMEL_HEADER_ADDRESS_/g

2004-01-16 Sivaiah Nallagatla <snallagatla@novell.com>
	
	* providers/groupwise/camel-groupwise-provider.c: added some conf
	entries for LDAP address setup

	* providers/groupwise/camel-gw-listener.c: added
	add_ldap_addressbook_source, modify_ldap_addressbook_source,
	remove_ldap_addressbook_source functions for setting up LDAP
	address book. Also setting "username" property on cal/tasks
	ESources

2004-01-15  Not Zed  <NotZed@Ximian.com>

	** See bug #52881.

	* camel-object.c (camel_object_bag*): Support reserving different
	keys from the same thread.  Oh the pain.

	* camel-vee-store.c (vee_get_folder_info): implement child flags
	properly. Changed to build tree itself rather than calling
	camel_folder_info_build.
	(vee_get_folder): if we're adding a folder with dummy parents,
	create and add the dummy parent folders too (as real folder
	objects).  We are the only owner of the ref, so this sort of leaks
	the folder, but they're small.

2004-01-14  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): missing renaming.

2004-01-14  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-gw-listener.c (add_esource): set the
	"auth" property on the ESource's we create, to get authentication.

2004-01-14  Not Zed  <NotZed@Ximian.com>

	** Patch from Timo Sirainen <tss@iki.fi> to honour read-only
	status for imap folders.
	
	* providers/imap/camel-imap-folder.c (camel_imap_folder_selected):
	check for read-only status response.
	(imap_sync_online): only call sync_offline if we're read-only.
	(imap_expunge_uids_resyncing): NOOP for read-only.

2004-01-14  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv): remove debug
	printf.

	** See bug #52835.

	* camel-smime-context.c (sm_get_passwd): removed debugging.  If we
	get called multiple times in a row, then forget the old password
	and re-prompt - it was a bad password.  Zero out password memory
	too.

2004-01-13  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: missing renaming.

2004-01-13  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* providers/groupwise/camel-gw-listener.[ch] : renamed groupwise-config-listener.[ch] 
	to these file names and also changed code to use CamelURL insted of EUri
	* providers/groupwise/camel-groupwise-provider.c : use the renamed config listener apis
	* providers/groupwise/Makefile.am : changed the source file names 


2004-01-12  Meilof Veeningen  <meilof@wanadoo.nl>

	* providers/nntp/camel-nntp-folder.[ch]: now based on discofolder,
	cache_message and append_message implemented, only retrieve messages
	when we are subscribed, some stubs

	* providers/nntp/camel-nntp-provider.c: newsgroup name display
	settings, password authentication, fix for check_equal where the
	protocols wouldn't be checked

	* providers/nntp/camel-nntp-store.[ch]: base on discostore with
	online/offline support, subscriptions, downloading changed parts of
	the newsgroup list, some stubs, authentication, automatic reconnect

	* providers/nntp/camel-nntp-store-summary.[ch]: NNTP store
	summary based on IMAP code

	* providers/nntp/camel-nntp-summary.c: save summary after xover

	* providers/nntp/camel-nntp-grouplist.h: added CamelNNTPGroupList
	structs

	* providers/nntp/Makefile.am: added store summary

2004-01-12  Not Zed  <NotZed@Ximian.com>

	** See bug 52725.

	* providers/imap/camel-imap-folder.c (get_content): pass in
	transfer encoding when setting up wrapper part.

	* providers/imap/camel-imap-wrapper.c (camel_imap_wrapper_new):
	Added an encoding type parameter, set on data wrapper.

2004-01-10  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (rfc2047_encode_word): if e_iconv() returns
	-1, check that errno != EINVAL - if errno *is* EINVAL, it just
	means that our convlen wasn't long enough to include the whole
	sequence. This is fine, we'll just start where we left off next
	loop thru. Fixes bug #52593 (the buffer was duplicated because
	state wasn't flushed).
	(camel_header_encode_string): Fixed a type-o in loop where
	encoding=0, don't g_string_append_len starting at 'word'
	inptr-start bytes long - 'word' could be NULL and/or inptr-start
	could be longer than inptr-word.

2004-01-09  Rodney Dawes  <dobey@ximian.com>

	* providers/groupwise/Makefile.am (EXTRA_DIST): libcamelgroupwise.urls
	instead of libcamelimap.urls

2004-01-09  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/groupwise-config-listener.c
	(is_groupwise_account): added null check for source url to take
	care of accounts with Server Types as "None"

2004-01-09  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (imap_forget_folder): fix
	removal of journal file, and remove the cmeta state file too.

	* providers/imap/camel-imap-folder.c (imap_getv): count up so we
	call parent class if we missed any, rather than only if we didn't
	miss any.
	(imap_rename): rename the object state file.
	(camel_imap_folder_new): set the object state file for persistent
	properties.

	* camel-disco-folder.c (disco_getv): support
	(PERSISTENT_)PROPERTIES & OFFLINE_SYNC.
	(disco_setv): implement OFFLINE_SYNC.
	(camel_disco_folder_get_type): setup disco properties list.
	(cdf_folder_changed): honour the offline_sync setting on the
	current folder.
	(disco_sync): save object state.
	(disco_setv): save object state if it changed.

	* camel-data-wrapper.c (camel_data_wrapper_set_mime_type_field):
	move assertions here.
	(set_mime_type_field): change order slightly to properly handle
	setting the same object.  removed assertions from internal method.

2004-01-08 Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/Makefile.am : add groupwise to SUBDIRS

	* providers/groupwise/camel-groupwise-provider.c: new camel
	provider for groupwise

	* providers/groupwise/groupwise-config-listener.[ch] : new class
	to add e-sources for groupwise calender and tasks

	* providers/groupwise/Makefile.am : added new files to Makefile.am

2004-01-05  JP Rosevear <jpr@ximian.com>

	* camel-utf8.c: include sys/types.h for freebsd

2004-01-05  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c (groupwise_url_hash,
	groupwise_url_equal): renamed from imap_*.

2004-01-05  Not Zed  <NotZed@Ximian.com>

	* camel-tcp-stream-raw.c (socket_connect): check the right return
	of the socket call, dont set fd to the value of the -1 check!

2003-12-27  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-tcp-stream-raw.c (socket_connect): Save errno and check
	the return of the socket() call.

2003-12-24  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): g_module_open the other providers we
	depend on to avoid load ordering problems.

2003-12-22  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: removed useless
	configuration options, and added other options from the IMAP
	provider.
	(camel_provider_module_init): register a SMTP transport object
	also, and removed SASL registration, since we don't support it.

2003-12-19  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/Makefile.am:
	* providers/groupwise/libcamelgroupwise.urls:
	* providers/groupwise/camel-groupwise-provider.c: added Camel
	provider for Groupwise accounts, based on the IMAP one.

2003-12-11  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_parse_status): Don't immediately
	prompt for a passwd after receiving the NEED_PASSPHRASE status
	message. Instead, parse the userid that gpg needs a passwd for and
	store it on our context. Wait for a GET_HIDDEN status message
	before prompting, this way if the user has their gpg configured to
	use gpg-agent, the user won't get 2 passwd prompts.
	(gpg_sign): Fixed to not free a gpg context that we have not
	allocated (could happen in a fail case).

2003-12-10  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder_info): Use
	CAMEL_FODLER_NOCHILDREN rather than NOINFERIORS because
	NOINFERIORS means the folder cannot contain subfolders. However,
	our mbox structure always allows subfolders.
	(scan_dir): Same.

	* camel-store.h: Add a CAMEL_FOLDER_NOCHILDREN flag.

	* providers/imap/camel-imap-store.c (get_folders): Same as below.

	* providers/imap/camel-imap-utils.c (imap_parse_list_response):
	s/CAMEL_IMAP_FOLDER_NOCHILDREN/CAMEL_FOLDER_NOCHILDREN/

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify): also check
	application/pkcs7-signature (bloody applemail).
	(camel_smime_context_describe_part): as above, and fix the logic.
	dont think its used anyway.  Bug #51750.

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* Makefile.am (libcamel_la_SOURCES): put the
	camel-smime-context.[ch] back in here, remove it from EXTRA_DIST,
	and make it compile optinally the same way camel-tcp-stream-ssl.c
	does (#ifdef ...).

	* camel-smime-context.c (sm_verify_cmsg): add signer info to
	certvalidity.

	* camel-cipher-context.c (CamelCipherValidity): Added certinfo to
	validity for signing and encrypting, so we can find the keys later
	for a gui.
	(camel_cipher_validity_add_certinfo): add signer or
	encrypter info to the validity.
	(camel_cipher_validity_envelope): add sign/encrypt keys.

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* camel-stream-process.c (do_exec_command): remove dthe clearenv
	stuff, not sure why its there.  s/setenv/putenv/ for portability.
	See Bug #51767.

2003-12-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_rfc2184_param): Revert the
	s/is_/camel_mime_is_/ changes or we get really long variable
	names.
	(header_decode_param): Same.
	(header_decode_param_list): Here too.

2003-12-09  Not Zed  <NotZed@Ximian.com>

	** See bug #51899.

	* providers/imap/camel-imap-store.c (get_folders): add the first
	fi to the info's hash, so we dont duplicate it if we come across
	it again (which we generally will).

2003-12-09  Not Zed  <NotZed@Ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_send_to): encode the
	address before sending it out, rather than using the raw/utf8
	version.

	* camel-internet-address.c
	(camel_internet_address_encode_address): check for quoting the
	local part of the address before outputting it.
	(cia_encode_addrspec): quote local part if need be.
	(camel_internet_address_encode_address): make folding optional
	based on whether inlen is null or not.

	* camel-mime-utils.[ch]: rename is_* to camel_mime_is_* and export
	the type functions.

2003-12-08  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-utils.c (imap_atom_specials): add } to
	the atom specials list.  This isn't correct, but some busted
	servers expect it.  Bug #50728.

2003-12-08  Jeffrey Stedfast  <fejj@ximian.com>

	Fixes bug #51881

	* providers/local/camel-mbox-store.c (delete_folder): Same.

	* providers/local/camel-local-store.c (delete_folder): Unlink the
	cmeta file too.

2003-12-06  JP Rosevear <jpr@ximian.com>

	* */Makefile.am: Remove hard coded disable deprecated flags

2003-12-05  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_op_start): Properly set the
	O_NONBLOCK flag along with any previously set flags.

	* camel-filter-search.c (run_command): Don't set O_NONBLOCK on the
	pipe (1. we don't need to, and 2. we should have been setting
	O_NONBLOCK|prev_flags but we weren't, and so the pipe got
	O_RDONLY|O_NONBLOCK even tho we wanted to write to it).

	* camel-filter-driver.c (pipe_to_system): Same.

2003-12-04  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (folder_changed): check recent messages for junk
	mail

	* camel-session.c (camel_session_check_junk): new wrapper method
	for check_junk flag
	(camel_session_set_check_junk): ditto

	* camel-session.h (struct _CamelSession): added check_junk flag
	(if to check incoming mail for junk messages)

2003-12-03  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-store.c (add_special_info): Free fi->path if we are gonna
	replace it with the vinfo path.

	* providers/local/camel-mbox-store.c (create_folder): Treat
	parent_name == NULL and parent_name == "" the same.

	* camel-store.c (camel_store_get_folder_info): Only add
	vTrash/vJunk info's if we've requested the toplevel folder tree,
	otherwise we get vTrash/vJunk folders in odd places in the folder
	tree.
	(add_special_info): Use the provider->url_flags to determine if
	the url uses the fragment or not for the path.

2003-12-02  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_setv): remove some
	debug printfs.

	** See bug #51576.

	* camel-url.c (camel_url_decode): robustify url decoding for bad
	input, addresses a crash.

	** See bug #51478.

	* camel-gpg-context.c (gpg_ctx_free): handle the context being
	NULL, and exit silently.

2003-12-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-process.c (camel_process_fork): Start at fd = 3.

	* camel-gpg-context.c (gpg_ctx_op_start): Same.

	* camel-filter-driver.c (pipe_to_system): Same.

	* camel-filter-search.c (run_command): Start at fd = 3.

2003-12-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-stream-process.c (do_exec_command): Same.

	* camel-process.c (camel_process_fork): Same.

	* camel-filter-search.c (run_command): Same as below.

	* camel-filter-driver.c (pipe_to_system): Same as below.

	* camel-gpg-context.c (gpg_ctx_op_start): Use fcntl() to set
	FD_CLOEXEC on each fd rather than close()ing it. Apparently
	Linux's older pthread implementations use sockets and so this
	fouls threading up. GO LINUX! GO!

2003-12-01  Radek Doulik  <rodo@ximian.com>

	* camel-store.c (add_special_info): set SUBSCRIBED and NOINFERIORS
	flags to special folders, renamed method from
	add_vtrash_or_vjunk_info
	(camel_store_get_folder_info): call add_special_info directly

2003-11-28  Radek Doulik  <rodo@ximian.com>

	* camel-store.c (camel_store_get_folder_info): use old code from
	mail-ops to add vtrash/vjunk info

2003-11-28  David Woodhouse  <dwmw2@redhat.com>

	* providers/imap/camel-imap-provider.c: Enable GUI option for
	'custom command' connection.
	* providers/imap/camel-imap-store.c: Don't g_free strings in
	.rodata. It's considered rude.

2003-11-28  Not Zed  <NotZed@Ximian.com>

	* camel-mime-utils.c (mail_list_magic[]): Added list-unsubscribe
	header match.

2003-11-26  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify_cmsg): take a stream rather
	than a part for the content.
	(sm_verify): get the content directly as a stream.

	* camel-multipart-signed.c
	(camel_multipart_signed_get_content_stream): new api to get the
	content stream which will match the signed version.

2003-11-26  JP Rosevear <jpr@ximian.com>

	* Makefile.am: make sure we always dist the smime stuff

2003-11-26  JP Rosevear  <jpr@ximian.com>

	* Makefile.am (libcamelinclude_HEADERS): conditionally compile
	s/mime support

2003-11-25  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c (camel_cipher_validity_envelope): change
	args to make it suit storing the validity in a tree.
	(camel_cipher_validity_init): init the list header.
	(camel_cipher_validity_clone): call validity_new so it gets init
	properly.
	(camel_cipher_validity_free): free any children nodes recursively.

	* camel-cipher-context.h (CamelCipherValidity): added next/prev
	and list header.

2003-11-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-session.c (camel_session_finalise): Don't destroy the
	providers as it mans we can never ever have more than 1 session
	object. See bug #51119 for details.

2003-11-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (create_folder): Fixed an
	exception to give a more meaningful description.
	(get_folder_info): We always want to scan at least one level deep.

2003-11-14  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder_info): Handle ""
	as a request for a full dirscan as well (not just NULL). Makes it
	consistant with other stores.
	(scan_dir): Set the fi->flags appropriately.

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Removed temporary hack.

2003-11-14  Not Zed  <NotZed@Ximian.com>

	* camel-mime-parser.c (SCAN_BUF): oops, put the mempool stuff
	back, we don't use e-memory afterall.  Damn plane hacking.

2003-11-13  Not Zed  <NotZed@Ximian.com>

	* camel-mime-parser.c: Remove mempool code, we use the stuff in
	e-util.
	(PRESERVE_HEADERS): new compile option, if on, we preserve headers
	and folding exactly rather than unfolding all input.  THIS BREAKS
	EVERYTHING right now, so don't turn it on.

	* camel-gpg-context.c (gpg_decrypt): reset the input memstream
	before passing it to the gpg engine.

	* tests/smime/pgp-mime.c (main): redirect /dev/null to stdin so it
	doesn't hang waiting for input.
	(main): removed from build - this tests multipart/signed
	explictly, but now the details of this is handled directly by the
	cipher context.

	* tests/smime/pgp.c (main): fixes for api changes.
	(main): redirect /dev/null to stdin so it doesn't hang waiting for
	input.

	* tests/message/test1.c (main): update for api changes.

	* camel-smime-context.c (sm_verify): look at the content object's
	mime type, not the container's type.

2003-11-11  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c (camel_cipher_validity_set_valid): take
	into account the @valid argument and set validity properly.
	(camel_cipher_validity_clone): new method to copy validities.

	* camel-smime-context.c (sm_signing_cmsmessage): removed a todo.

2003-11-10  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify_cmsg): split out the CMSMessage
	verification code so it can be used from enveloped or externally
	signed data.

	* camel-cipher-context.c (camel_cipher_verify): only take a
	mimepart, internally handle multiparts and the hash.

2003-11-07  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c: make ciphervalidity a public structure,
	added encrypt status.
	(camel_cipher_decrypt): changed to return a ciphervalidity.  fixed
	implementations.
	(camel_cipher_validity_*): Fixed implementations to match new
	structure, some of this is now redundant.

2003-11-06  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (camel_smime_context_describe_part):
	implement.

2003-11-05  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (connect_to_server): Don't
	bother trying to see if the server advertises EHLO. Simply always
	try EHLO and fall back to HELO if EHLO fails. Fixes bug #50535.

2003-11-05  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (camel_smime_context_describe_part): new
	(unfinished) api to peek inside smime parts to tell us whats in
	it.

2003-11-03  Not Zed  <NotZed@Ximian.com>

	* camel-gpg-context.c (gpg_encrypt): Make this output the
	full multipart/encrypted part, not just the encrypted content part.

	* camel-cipher-context.c (camel_cipher_sign): change to output
	full mime part, not just a stream.
	(camel_cipher_canonical_to_stream): utility function to
	canonicalise a mimepart to a stream.

	* camel-smime-context.c (sm_encode_cmsmessage): removed.
	(sm_sign): change interface to output a full mime-part, not just a
	part of a mime part in multipart/signed mode.

2003-11-04  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_parse_status): We might need to
	convert the passwd from UTF-8 into the locale charset. Fixes bug
	#50485.

2003-10-31  Not Zed  <NotZed@Ximian.com>

	* camel-cms-context.[ch]: removed, now redundant.

2003-10-30  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_get_passwd): implement something basic.

	* camel-cipher-context.h: Added a note about api inconsistencies.

2003-10-30  Not Zed  <NotZed@Ximian.com>

	* camel-multipart-encrypted.c (camel_multipart_encrypted_decrypt):
	fix for cipher_decrypt changes.

	* camel-gpg-context.c, camel-cipher-context.c: moved all the init
	code to the end to save having to keep forward declarations
	around.
	(camel_cipher_decrypt): changed to take mimepart input and return
	a mimepart.
	(gpg_decrypt): fix for changed args.

2003-10-29  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.[ch]: replaced entirely with a new
	implementation which inherits from camel-cipher-context, and add
	to build.

	* camel-multipart-encrypted.c (camel_multipart_encrypted_encrypt):
	fix for cipher_encrypt api changes.
	(camel_multipart_encrypted_decrypt): use g_ascii_strcasecmp.

	* camel-gpg-context.c (gpg_encrypt): Fix to handle input/output as
	parts not streams

	* camel-cipher-context.c (camel_cipher_encrypt): change to take
	mimeparts rather than streams as input/output.  And remove the
	'sign' argument, it is implied if userid is supplied.

2003-10-28  Not Zed  <NotZed@Ximian.com>

	* tests/smime/pgp.c (main): fix for ciphercontext api changes.

	* camel-multipart-signed.c (camel_multipart_signed_verify): pass
	in the part to cipher_verify directly.
	(camel_multipart_signed_sign): let the cipher context setup the
	part details.

	* camel-gpg-context.c (gpg_sign): put the signature stream into a
	mimepart, with appropriate headers/encoding.
	(swrite): write out a mimepart rather than a stream.
	(gpg_verify): handle changed args.

	* camel-cipher-context.c (camel_cipher_sign): write the signature
	to a mimepart rather than a simple stream.
	(camel_cipher_verify): take the signature as a mimepart not a
	stream.

2003-10-22  Not Zed  <NotZed@Ximian.com>

	* camel-utf8.c (camel_ucs2_utf8, camel_utf8_ucs2): helpers for
	ucs2 stuff.  ucs2 is 16 bit truncated unicode.

2003-10-28  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c: We should check List-Post before List-Id
	(List-Post has to contain the mailing-list posting address,
	whereas List-Id does not.) WAlso moved X-Loop to after List-Id to
	make FreeBSD lusers happy. Fixes bug #32297.

2003-10-28  Jeffrey Stedfast  <fejj@ximian.com>

	* Fixes bug #35083

	* providers/imap/camel-imap-store.c (connect_to_server): Same
	here.

	* providers/pop3/camel-pop3-store.c (connect_to_server): Same as
	the smtp changes.

	* providers/smtp/camel-smtp-transport.c (connect_to_server): If
	HAVE_SSL is undefined, don't default to raw connections if the
	option to connect via ssl is set. Instead set an exception and
	return fail.

2003-10-27  Frederic Crozat  <fcrozat@mandrakesoft.com>

	* camel-mime-utils.c: (camel_header_decode_date):
	better detection of broken date to give to broken_date_parser.

2003-10-24  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-text-index.c (text_index_name_add_buffer): If a word is
	longer than CAMEL_TEXT_INDEX_MAX_WORDLEN, then ignore it. This
	fixes bug #50096.

2003-10-23  Jeffrey Stedfast  <fejj@ximian.com>

	* *.c: Removed unneeded CAMEL_OBJECT() casts.

2003-10-21  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv, local_setv):
	use the right tag name for the index_body arg.
	(local_sync): write any persistent metadata - to make it
	persistent.
	(camel_local_folder_construct): turn off indexing, for now, it
	should be done in local_setv.

	* providers/local/camel-local-folder.h: change body_index to a bool
	type.

	* camel-object.c (cobject_state_read, cobject_state_write): handle
	bool types
	(cobject_state_write): make sure we free all arg types.

	* camel-arg.c (camel_argv_build):
	(camel_arggetv_build):  handle bool type.

	* camel-arg.h: Added BOO (bool) type.

2003-10-15  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_folder_info_build): Fix so we output the
	tree in sorted depth-first order, rather in reverse.

2003-10-16  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-sasl-kerberos4.c: Fixed a #include.

2003-10-10  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-provider.c: set the url fragment
	flag for local providers.

	* camel-provider.h: Move the URL_PART_NEED bits to the high 16
	bits, to allow for easier changes in the future.  Added a
	URL_PART_FRAGMENT flag for providers that use fragment = folder
	path.

2003-10-09  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_date): Allow timezone offsets
	to be up to 14 hours ahead of UTC. Fixes bug #49357.

	* broken-date-parser.c (get_tzone): Same.

2003-10-08  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_helo): Removed an
	unused variable.

2003-09-25  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_helo): If the
	localhost lookup results in a numeric IPv6 host, use the form
	"[IPv6:<addr>]" as specified in rfc2821. Fixes bug #46006.

2003-09-23  Ettore Perazzoli  <ettore@ximian.com>

	* providers/local/camel-local-provider.c: Set the IS_STORAGE bit
	in the mbox provider, since it can now contain a hierarchy of
	folders.

2003-09-23  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder): If the CREATE
	flag is set and the parent .sbd directory does not exist, create
	it.

	* camel-mime-utils.c (append_8bit): Don't forget to flush the
	iconv conversion.

	* tests/message/test4.c (main): Don't try dot-files.

2003-09-22  Not Zed  <NotZed@Ximian.com>

	** See bug #41610
	
	* providers/pop3/camel-pop3-folder.c (cmd_tocache): protect a
	divide by 0 for 0 length messages.

2003-09-22  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-provider.c: Added "offline_sync"
	option, which lets you synchronise all mail to local storage
	automagically.

	* camel-disco-folder.c (cdf_folder_changed): hook onto the folder
	changed single, for all new messages, check that they are online
	using another thread, if the offline_sync option has been enabled
	for this store.

2003-09-21  Not Zed  <NotZed@Ximian.com>

	* camel-session.c (session_thread_destroy): call proper entry
	point for freeing the message.

2003-09-18  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (filter_filter): register the filtering process
	for progress, and do progress of the filtering process.

2003-09-17  Not Zed  <NotZed@Ximian.com>

	* camel.c (camel_init): init camel operation.

	* camel-operation.c (camel_operation_reset): removed, not used,
	not worth it.
	(camel_operation_mute): new method to stop all status updates
	permanently.
	(*): Changed to use thread specific data and a list rather than a
	hashtable.
	(cancel_thread): removed.
	(camel_operation_register): return the previously registered op.

2003-09-22  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/nntp/camel-nntp-store.c (connect_to_server): Fix the
	code that creates a new ssl stream to pass the correct arguments
	and the proper flags.

	* providers/imapp/camel-imapp-folder.c (imap_sync): Cast the
	CamelFolder to a CamelIMAPPFolder to hush some compiler warnings.

	* camel-mime-utils.h: Define a struct _CamelContentDisposition
	(allows the imapp code to compile)

	* providers/imapp/camel-imapp-driver.c: #include <string.h>

2003-09-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (camel_transfer_encoding_to_string): New
	function to replace the one from camel-mime-part.c
	(camel_transfer_encoding_from_string): Same.
	(camel_content_transfer_encoding_decode): Renamed from
	camel_header_content_encoding_decode().

	* camel-mime-part.c (camel_mime_part_encoding_to_string): Removed.
	(camel_mime_part_encoding_from_string): Removed.

	* camel-data-wrapper.[c,h]: updated for CamelTransferEncoding
	namespace changes

	* camel-folder-summary.c: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-filter-bestenc.[c,h]: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-message.c: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-part-utils.c: updated for CamelTransferEncoding
	namespace changes

	* camel-multipart-signed.c: updated for CamelTransferEncoding
	namespace changes

	* camel-smime-context.c: updated for CamelTransferEncoding
	namespace changes

	* providers/imapp/camel-imapp-utils.c: updated for
	CamelTransferEncoding namespace changes

	* tests/lib/messages.c: updated for CamelTransferEncoding
	namespace changes

	* tests/message/test1.c: updated for CamelTransferEncoding
	namespace changes

2003-09-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.[c,h]: namespaced the encoding/decoding
	routines.

	* camel-mime-filter-basic.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-multipart.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-sasl-digest-md5.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-sasl.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c
	
	* camel-vee-folder.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* providers/imap/camel-imap-search.c: updated for namespace
	changes to the encoding/decoding routines in camel-mime-utils.c

	* providers/pop3/camel-pop3-folder.c: updated for namespace
	changes to the encoding/decoding routines in camel-mime-utils.c

2003-08-26  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-parser.[c,h]: s/HSCAN_/CAMEL_MIME_PARSER_STATE_/g and
	s/_header_state/_camel_mime_parser_state/g

	* camel-filter-driver.c: Same.

	* camel-folder-summary.c: Here too.

	* camel-http-stream.c: And here.

	* camel-mime-message.c: ...

	* camel-mime-part-utils.c: ...

	* camel-mime-part.c: ...

	* camel-movemail.c: ...

	* camel-multipart-signed.c: ...

	* camel-multipart.c: ...

	* providers/local/camel-mbox-folder.c: ...

	* providers/local/camel-mbox-summary.c: ...

	* providers/local/camel-mh-summary.c: ...

	* providers/nntp/camel-nntp-summary.c: ...

	* providers/pop3/camel-pop3-folder.c: ...

2003-08-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.[c,h]: Namespaced.

	* camel-data-wrapper.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-digest-folder.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-filter-driver.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-filter-search.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-folder-search.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-folder-summary.[c,h]: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-http-stream.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-http-stream.h: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-internet-address.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-medium.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-message.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-parser.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-part-utils.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-part.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-movemail.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-multipart-encrypted.c: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-multipart-signed.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-multipart.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-search-private.[c,h]: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-types.h: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* providers/imap/camel-imap-folder.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/imap/camel-imap-store-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/imap/camel-imap-utils.c: updated for namespace changed
	made to camel-mime-utils.[c,h]

	* providers/imapp/camel-imapp-utils.[c,h]: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-local-summary.[c,h]: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-maildir-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-mbox-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-spool-summary.h: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/nntp/camel-nntp-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/nntp/camel-nntp-utils.c: updated for namespace changed
	made to camel-mime-utils.[c,h]

	* providers/pop3/camel-pop3-folder.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/sendmail/camel-sendmail-transport.c: updated for
	namespace changed made to camel-mime-utils.[c,h]

	* providers/smtp/camel-smtp-transport.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

2003-09-16  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Implement a temp hack so trunk
	works until we merge in new-ui-branch.

	* camel-stream-filter.c (do_flush): Don't warning about how we
	haven't written anything to the stream, this is not an
	error. fflush() doesn't care if you try to fflush() a stream
	without writing to it, so we shouldn't care either.

2003-09-15  Not Zed  <NotZed@Ximian.com>

	* providers/imapp/camel-imapp-store.c (store_resp_list)
	(imap_login, try_sasl, imap_try_authenticate): removed dead code.

	* providers/imapp/camel-imapp-stream.c: return -1 if stream not
	set.

	* providers/imapp/camel-imapp-engine.c (iterate_completion): put
	done request on the done queue, so all requests are always
	somewhere.
	(camel_imapp_engine_command_free): just spit warnings of active
	messages being freed, but abort if the item isn't in any list.
	Also remove the node from its list before going on.
	(iterate_untagged, iterate_continuation, iterate_completion):
	staticifiy.

	* providers/imapp/camel-imapp-provider.c
	(camel_imapp_module_init): move camel_exception_setup call here.

	* providers/imapp/camel-imapp-driver.c
	(camel_imapp_driver_get_type): remove execption setup here, it
	isn't early enough.
	(camel_imapp_driver_list): handle exceptions.

2003-09-12  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Implements
	CamelLocalFolder::get_full_path() (publicly namespaced so that
	CamelMboxStore can re-use them).
	(camel_mbox_folder_get_meta_path): Same.

	* providers/local/camel-mbox-store.c (get_folder): Changed the way
	the path is constructed, since we now handle subdirectories and
	stuff.
	(delete_folder): Try deleting the Folder.sbd directory. We also
	need to manage our own meta files since CamelLocalStore's impl
	constructs paths differently than what we need.
	(create_folder): Implemented.
	(rename_folder): Implemented.
	(scan_dir): Scan an mbox tree
	(get_folder_info): Implemented using scan_dir().

	* providers/local/camel-local-store.c (delete_folder): Set fi->url
	to the correct value, meaning we need to prefix it with the
	protocol and the folder_name is not actually part of the path, it
	is a separate component to the url.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): Use the new class virtual method
	to construct the full folder path and all the meta files.
	(local_get_full_path): Implemented default get_full_path method.
	(local_get_meta_path): Implemented default get_meta_path method.

2003-09-11  Dan Winship  <danw@ximian.com>

	* Makefile.am (noinst_LTLIBRARIES): Remove libcamel-static.la

2003-09-05  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (imap_noop): call
	camel_folder_sync bypassing the folder lock.  See
	imap_store_refresh_folders too.

2003-09-04  David Woodhouse  <dwmw2@infradead.org>

	* providers/camel-imap-store.[ch]: Add PREAUTH handling and
	pine/mutt/etpan/etc.-style 'ssh <mailhost> exec imapd' support.
	
2003-09-03  David Woodhouse  <dwmw2@infradead.org>

	* camel-stream-process.[ch]: New stream implementation for running
	commands.
	* Makefile.am: Compile the above

2003-08-20  Not Zed  <NotZed@Ximian.com>

	** See bug #47765.

	* camel-folder-search.h: Removed match1 member.

	* camel-folder-search.c (camel_folder_search_match_expression):
	use current directly rather than match1.  This method isn't used
	anywhere anyway.
	(search_not): remove match1 stuff.
	(search_match_all): properly handle the match-all against 1
	message as a scalar result, not an array result.

2003-09-03  Not Zed  <NotZed@Ximian.com>

	* camel-http-stream.c (camel_http_stream_set_proxy): handle NULL
	proxy_url - unset the proxy.

2003-08-29  Not Zed  <NotZed@Ximian.com>

	* camel-object.c (camel_object_state_write): 
	(cobject_getv):
	(cobject_setv, cobject_state_read, cobject_state_read) 
	(cobject_state_write): removed debug printfs.

	* providers/local/camel-local-folder.c (local_getv): Need to copy
	the local properties list before passing it out, since it's freed.

2003-08-27  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv): implement
	PERSISTENT_PROPERTIES, for index mode.

	* camel-object.c (cobject_state_read): Also add property reading,
	and bump version to 1.
	(cobject_state_write): add persistent property writing.

2003-08-26  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (folder_getv): chain up properly.

	* camel-file-utils.c (camel_file_util_savename): helper to create
	a .#filename filename.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): init meta-data for local folders.
	(local_getv): chain up properly, if args are not processed, rather
	than don't if they aren't.

2003-08-23  Not Zed  <NotZed@Ximian.com>

	* camel-object.c (cobject_class_init): added a new event,
	meta_changed.
	(camel_object_meta_set, camel_object_meta_get): meta-data api.
	(camel_object_free_hooks): Free meta-data if it is set on the
	object.

	* providers/local/camel-local-folder.c
	(camel_local_folder_get_type): setup a property list for local
	folders, just 'index_body' at present.

2003-08-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-filter-driver.c (pipe_to_system): Added some more error
	checking for reading/writing to the pipes. Fixes bug #47880.

2003-08-21  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-data-wrapper.c (decode_to_stream): Don't poke
	wrapper->stream directly, use camel_data_wrapper_write_to_stream()
	instead as this simplifies things and makes the imap data wrapper
	implementation Just Work (tm).

	* providers/imap/camel-imap-wrapper.c: changed prototype of
	write_to_stream() to return ssize_t.

2003-08-20  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-wrapper.c (imap_wrapper_hydrate): Make
	sure to ref the stream. Fixes bug #47749.

2003-08-18  Not Zed  <NotZed@Ximian.com>

	* camel-http-stream.c: Various fixes to make it work.

	* tests/smime/pgp-mime.c (main): added missing 'ret' variable.

	* providers/smtp/camel-smtp-transport.c (connect_to_server): 
	* providers/imapp/camel-imapp-store.c (connect_to_server:
	* providers/imap/camel-imap-store.c (connect_to_server):
	* providers/pop3/camel-pop3-store.c (connect_to_server):
	* camel-http-stream.c (http_connect): change service->session for
	tcp_stream_ssl_new.

	* camel-tcp-stream-ssl.c: Changed service to session, and fix some
	refcounting of it.
	include camel-operation.h

2003-08-15  Not Zed  <NotZed@Ximian.com>

	** See bug #47634.

	* tests/lib/messages.c (test_message_compare): check
	write_to_stream returns.
	(message_dump_rec): helper to dump message structure.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): dont set content
	encoding here.
	(camel_mime_part_construct_content_from_parser): set it here
	instead, on every part.  basically same as setting the
	mime_type_field always.

	* camel-multipart-signed.c (camel_multipart_signed_class_init): 
	* camel-mime-message.c (camel_mime_message_class_init): 
	* camel-multipart.c (camel_multipart_class_init): override
	decode_to_stream to always do the same as write_to_stream, since
	we can never be encoded.

2003-08-15  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-wrapper.c (imap_wrapper_hydrate):
	Don't attach any filters to decode base64/qp/etc.

2003-08-14  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-part.c (write_to_stream): Save errno when
	flushing/unreffing the filter stream.

2003-08-13  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-part.c (write_to_stream): If the content is
	base64/qp/uu/etc encoded but the part is 7bit/8bit/(or otherwise
	non-encoded), set reencode to TRUE so that we decode the original
	content stream. Fixes a bug noticed on
	evolution-patches@ximian.com where a patch had a
	Content-Transfer-Encoding of 7bit but was base64 encoded.

2003-08-13  Not Zed  <NotZed@Ximian.com>

	* camel-folder-summary.c (camel_folder_summary_remove_range): Fix
	the range check, we were stopping removal of 1 or 2 removals, for
	some odd and completely uncomprehensible reason.  Perhaps debug
	left in?

2003-08-13  Not Zed  <NotZed@Ximian.com>

	** See bug #47517.

	* camel-vee-folder.c (vee_sync): Always rebuild folder on any
	sync, not just expunge ones.

2003-08-11  Not Zed  <NotZed@Ximian.com>

	* providers/imapp/camel-imapp-store.c (imap_get_folder_info):
	force connect manually so basics work.

	** See bug #45505.

	* camel-service.c (camel_gethostbyname): duh, pthread_create
	returns the error code directly, not via errno.
	(camel_gethostbyaddr): Same, also properly handle the failure
	case.

2003-08-01  Not Zed  <NotZed@Ximian.com>

	** See bug #47208.

	* camel-filter-search.c (match_all): match-all with no arguments	
	should always return TRUE.

	* camel-folder-search.c (camel_folder_search_execute_expression):
	print a warning when we get an invalid result type & fixed a leak
	for that case.

2003-08-08  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/message/test4.c: New test suite for the mime parser (which
	is where the below 2 fixes were noticed).

	* camel-mime-parser.c (folder_boundary_check): Calculate 'len' by
	subtracting the boundary start from inend rather than 'atleast'.
	(folder_scan_content): Calculate 'inend' differently depending on
	the EOF state.

2003-08-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-filter-tohtml.c (html_convert): Rather than checking
	*inptr == '\n', check inptr >= inend - this gets rid of an Invalid
	Read report from valgrind.

	* camel-mime-part.c (write_to_stream): Don't necessarily re-encode
	just because the encodings differ. Need to look into making it so
	that message/rfc822 and multipart parts ignore the
	Content-Transfer-Encoding header and just keep their 'encoding'
	bits set to DEFAULT.

2003-08-05  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (get_content): Updated.

	* camel-mime-message.c (camel_mime_message_init): Don't override
	the mime_type here.
	(process_header): Updated to use CamelDataWrapper's mime_type
	field.
	(find_best_encoding): Same.
	(best_encoding): Here too.

	* camel-digest-folder.c (camel_digest_folder_new): Updated for
	CamelMimePart::content_type change.

	* camel-mime-part.c (camel_mime_part_init): Override our parent
	class's default mime_type.
	(camel_mime_part_finalize): Don't need to unref the content_type
	anymore.
	(process_header): Updated to use CamelDataWrapper's mime_type
	field.
	(camel_mime_part_set_filename): Same.
	(camel_mime_part_get_filename): Same.
	(camel_mime_part_get_content_type): Same.
	(set_content_object): Here too.
	(write_to_stream): Updated.
	(construct_from_parser): Updated.

	* camel-mime-part.h: Remove the content_type field.

2003-07-31  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/lib/messages.c (test_message_compare_content): If the
	chunks differ, perform a hexdump on the data being compared so
	that we may analyse it easier.

	* camel-multipart-signed.c (write_to_stream): Return ssize_t.

	* camel-mime-utils.h: Added the CamelMimePartEncodingType enum
	here.

	* camel-mime-part.h: Removed the CamelMimePartEncodingType enum
	from here.

	* camel-mime-part.c (write_to_stream): Updated to return
	ssize_t. Also minor changes to only re-encode the content stream
	if the charset or encoding changed (this way we write it out in
	the original raw form if nothing changed).

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Drastically
	simplify. We no longer scan html content to try and find the
	charset, nor do we care about converting the content to UTF-8 and
	handling broken windows charsets.

	* camel-mime-message.c (find_best_encoding): Use
	decode_to_stream() here. Also updated to not assume the content
	charset is UTF-8 since it is very likely not the case anymore
	since data-wrappers no longer are converted to UTF-8 at parse
	time.

	* camel-folder-summary.c (summary_build_content_info_message): Use
	decode_to_stream instead here too.

	* camel-folder-search.c (match_words_1message): Use
	decode_to_stream instead of write_to_stream so we can search the
	contents.

	* camel-data-wrapper.c (camel_data_wrapper_init): Set the default
	encoding to DEFAULT.
	(write_to_stream): Updated to return ssize_t
	(camel_data_wrapper_decode_to_stream): New virtual function to
	decode a data wrapper to a stream (results in nearly identical
	behaviour to the old write_to_stream method).
	(decode_to_stream): Default implementation of above virtual
	method. Decodes base64/qp/etc streams.

	* camel-data-wrapper.h: Removed the rawtext bit and added an
	encoding member.

2003-08-01  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/smime/pgp-mime.c: Same.

	* tests/smime/pgp.c: Updated to build and to import some custom
	gpg keys for use with testing.

2003-07-30  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (write_to_stream): Also updated.

	* camel-data-wrapper.c (write_to_stream): This should return ssize_t

	* camel-multipart-signed.c (write_to_stream): Updated.

	* camel-multipart.c (write_to_stream): Same.

	* camel-mime-part.c (write_to_stream): Here too.

2003-07-11  Suresh Chandrasekharan <suresh.chandrasekharan@sun.com>

	* camel-iconv.c: Fix for #46168 'some additional locale aliases
	required for chinese support'.

2003-07-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_word): Revert NotZed's fix for
	bug #42170 - this causes even more problems than it solves. See
	bug #46331 for info. Basically, each address header would be
	converted to UTF-8 twice which means no raw 8bit address header
	would render correctly.
	(header_decode_mailbox): Perform a sanity check on the resultant
	addr->str to make sure that it is valid UTF-8, if not convert it
	to UTF-8. Fixes bug #42170.

2003-07-23  Ettore Perazzoli  <ettore@ximian.com>

	* camel-provider.c (camel_provider_init): Print the provider
	directory as well, for debugging.

2003-07-23  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Revert my previous
	changes to this function.

	* camel-mime-utils.h: Revert previous changes.

	* camel-mime-part.h: Revert previous changes.

	* camel-mime-part-utils.c: Revert previous changes.

	* camel-data-wrapper.c (camel_data_wrapper_init): Revert previous
	changes.
	(write_to_stream): Revert previous changes.

2003-07-23  Dan Winship  <danw@ximian.com>

	* camel-block-file.c: #include camel-file-utils.h for camel_read()

	* camel-uid-cache.c (camel_uid_cache_save): Remove unused variable
	and label.

	* camel-url.c: #include camel-string-utils.h for camel_strdown

	* providers/pop3/camel-pop3-store.c (pop3_try_authenticate): Cast
	an (unsigned char *) to (char *) to fix a warning

2003-07-17  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Updated to convert
	to/from the correct charset (since content is no longer
	necessarily in UTF-8).
	(best_encoding): Free the charset string when we're done with it.

	* camel-stream-fs.c (stream_read): Increment the seekable stream
	position by the number of bytes read. Oops.
	(stream_write): Same here.

2003-07-17  Timo Sirainen <tss@iki.fi>

	** See bug #42573
	
	* providers/imap/camel-imap-folder.c (do_append): Only free the
	response after we have finished the literal request, otherwise we
	could try processing folder updates incorrectly.

2003-07-14  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.h: Add the CamelMimePartEncodingType definition
	here.

	* camel-mime-part.h: Remove the CamelMimePartEncodingType
	definition.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Don't do any of the
	auto-detection we used to do here anymore. Just read the content
	into a memory buffer and record the encoding type.
	(camel_mime_part_construct_content_from_parser): Don't mangle the
	Content-Type struct here anymore.

	* camel-data-wrapper.c (camel_data_wrapper_init): Init encoding to
	DEFAULT.
	(write_to_stream): If the stream needs to be decoded, decode it.

2003-07-15  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-stream-fs.c (stream_read): If we read 0 bytes, then set
	eos to TRUE.

2003-07-09  Jeffrey Stedfast  <fejj@ximian.com>

	Get rid of the #ifdef ENABLE_THREADS since we no longer plan to
	support/maintain this.

	* providers/nntp/camel-nntp-store.c: Here.

	* providers/nntp/camel-nntp-newsrc.c: And here.

	* providers/nntp/camel-nntp-folder.c: Same.

	* providers/local/camel-local-folder.c: And here.

	* camel-block-file.c: Here too.

	* camel.c: Same.

	* camel-certdb.c: Here too.

	* camel-charset-map.c: And here.

	* camel-cipher-context.c: "

	* camel-data-wrapper.c: "

	* camel-digest-folder.c: "

	* camel-exception.c: "

	* camel-folder.c: "

	* camel-folder-summary.c: "

	* camel-lock-client.c: "

	* camel-mime-utils.c: "

	* camel-object.c: "

	* camel-operation.c: "

	* camel-partition-table.c: "

	* camel-sasl-popb4smtp.c: "

	* camel-service.c: "

	* camel-session.c: "

	* camel-store.c: "

	* camel-store-summary.c: "

	* camel-text-index.c: "

	* camel-transport.c: "

	* camel-vee-folder.c: "

	* camel-tcp-stream-openssl.c: Removed pthread.h, it isn't needed.

2003-07-09  Larry Ewing  <lewing@ximian.com>

	* camel.h: remove reference to camel-pgp-mime.h

2003-07-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-pgp-mime.[c,h]: Removed.

	* camel-iconv.c: Updated (new copy/paste from e-iconv).

	* camel-block-file.c (camel_block_file_get_block): Use
	camel_read() rather than libc read.

	* camel-tcp-stream-raw.c (stream_read): Use camel_read().
	(stream_write): Use camel_write().

	* camel-stream-fs.c (stream_read): Use camel_read().
	(stream_write): Use camel_write().

2003-07-07  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/nntp/camel-nntp-folder.c (camel_nntp_folder_new): Use
	camel_mkdir().

	* providers/imap/camel-imap-folder.c (camel_imap_folder_new): Use
	camel_mkdir().

	* camel-session.c (get_storage_path): Use camel_mkdir().

	* camel-store.c (camel_mkdir_hier): Removed.

	* camel-data-cache.c (camel_data_cache_new): Updated to use
	camel_mkdir().
	(data_cache_path): Same.

	* camel-file-utils.c (camel_mkdir): Renamed and documented.
	(camel_file_util_safe_filename): Documented.
	(camel_read): Moved here from camel-io.c
	(camel_write): Same.

	* camel-io.[c,h]: Removed.

	* camel-uid-cache.c (camel_uid_cache_new): Use the
	camel-file-utils.c version of mkdir.

2003-07-07  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-session.c (camel_session_init): Updated for string-utils
	namespace changes.

	* camel-provider.c: Updated for string-utils namespace changes.

	* camel-mime-part.c (init_header_name_table): Updated for
	string-utils namespace changes.

	* camel-mime-message.c (camel_mime_message_class_init): Updated
	for string-utils namespace changes.
	(camel_mime_message_init): Same.

	* camel-mime-filter-enriched.c
	(camel_mime_filter_enriched_class_init): Updated for string-utils
	namespace changes.

	* camel-folder-summary.c (camel_folder_summary_init): Updated for
	string-utils namespace changes.

	* camel-string-utils.[c,h]: Renamed from string-utils.[c,h] and
	also namespaced all functions.

2003-07-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-sasl-digest-md5.c (digest_response): Don't quote the
	charset value, the qop value, nor the response value. Fixes bug
	#45712.

2003-07-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_format_date): Use gmtime_r() instead
	of using gmtime() and memcpy() to try and be "atomic".

2003-06-30  Dan Winship  <danw@ximian.com>

	* camel-folder-search.c (camel_folder_search_finalize): free the
	summary hash

2003-06-24  David Woodhouse  <dwmw2@infradead.org>

	* camel-mime-utils.c (header_format_date): Put day of week into
	outgoing email.


2003-06-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-folder-summary.h: Added prototype for
	camel_folder_summary_remove_range().

2003-06-25  Not Zed  <NotZed@Ximian.com>

	** See bug #45386
	
	* camel-service.c (camel_gethostbyname, camel_gethostbyaddr): Make
	sure we have an exception that we test against.

2003-06-20  Not Zed  <NotZed@Ximian.com>

	** See bug #43887

	* camel-mime-filter-enriched.c (camel_enriched_to_html): simple
	wrapper to convert enriched to html in one go.

2003-06-18  Not Zed  <NotZed@Ximian.com>

	* camel-service.c (get_hostbyaddr, get_hostbyname): if we got
	cancelled, the message is floating, so free it.
	(struct _lookup_msg): Add a cancelled tag.
	(camel_gethostbyname, camel_gethostbyaddr): if we get a
	failure/cancel, cancel the lookup thread and detach, so we dont
	have to wait for it to return.  cleanup changed to handle the case
	where we didn't get a reply message.

2003-06-13  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/pop3/camel-pop3-folder.c (pop3_finalize): Made static
	(to match the prototype).

2003-06-13  Larry Ewing  <lewing@ximian.com>

	* camel-folder-thread.c (camel_folder_thread_messages_apply):
	don't leak the summary when reloading it.  Fixes a very large
	leak.

2003-06-17  Not Zed  <NotZed@Ximian.com>

	* camel-vee-folder.c (vee_folder_remove_folder): Calculate ranges
	to remove folder info's more efficiently.  affects shutdown
	performance on big vfolders signifinantly.
	(vee_folder_build_folder): do the same here, when rebuilding a
	folder's definition.

	* camel-folder-summary.c (camel_folder_summary_remove_index): new
	function to drop a range of index entries in one hit.

2003-06-16  Not Zed  <NotZed@Ximian.com>

	** See bug #31745

	* providers/imap/camel-imap-store-summary.c
	(camel_imap_store_summary_namespace_new): Workaround a shell bug -
	if the namespace has '#' in it, then strip it.

2003-06-16  Not Zed  <NotZed@Ximian.com>

	** See bug #44322
	
	* providers/imap/camel-imap-command.c (imap_command_strdup_vprintf):
	If we are outputting a folder name, make sure we calculate buffer
	size based on the raw/utf7 version

	** See bug #44121
	
	* camel-multipart-signed.c (signed_get_part): If we can't parse
	the content, but we have a stream, just use that as the content.

2003-06-05  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #40788.

	* providers/pop3/camel-pop3-engine.c (camel_pop3_engine_new): Now
	takes a flags argument. Currently there is only 1 flag which can
	be used to disable Pop3 server extensions.
	(get_capabilities): Don't check for Pop3 server extensions if the
	DISABLE_EXTENSIONS flag is set on the engine.
	(camel_pop3_engine_iterate): If we get a response that is neither
	+OK nor -ERR, default to treating it like a -ERR.

	* providers/pop3/camel-pop3-store.c (connect_to_server): Check for
	the disable_extensions param.

	* providers/pop3/camel-pop3-provider.c: Define a checkbox to
	disable all POP3 extension support.

2003-06-11  Jeffrey Stedfast  <fejj@ximian.com>

	Partial fix for bug #44457.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Make sure to set
	rawtext to FALSE if we successfully convert the text to UTF-8.

	* camel-data-wrapper.c (camel_data_wrapper_init): Default the
	value of rawtext to TRUE instead of FALSE. This way if the mailer
	decides to try displaying a non-textual part as text, it knows
	that it needs to convert the content to UTF-8.

2003-06-04  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-uid-cache.c (camel_uid_cache_new): Create the directory
	with mode 0777 and the cache file itself with mode 0666. Let the
	user's umask filter the permissions. Instead of saving the fd on
	the Cache object, instead save the filename. Use camel_read()
	instead of expecting read() to just always work without getting an
	EINTR/etc.
	(maybe_write_uid): Don't do anything if cache->fd == -1, this
	means an error has occured in a previous callback. Replace the 2
	calls to write() with camel_write() and check their return
	values. If either of them fails, set cache->fd to -1 (GHashTable
	doesn't give us a way to abort foreach'ing thru the table).
	(camel_uid_cache_save): Save to a temp file instead of overwriting
	the original. Do proper error checking, etc. Also added some
	smarts about whether to try and overwrite the old cache even if we
	haven't successfully saved all the uids in the cache.
	(camel_uid_cache_destroy): Free the cache->filename, no longer
	need to close (cache->fd).

2003-06-11  Larry Ewing  <lewing@ximian.com>

	* camel-text-index.c (text_index_normalise): use g_utf8_strdown
	properly.

2003-06-09  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Add the
	CAMEL_BESTENC_TEXT bit to enctype if the part is a text part.

	* camel-mime-filter-bestenc.c
	(camel_mime_filter_bestenc_get_best_encoding): If we have any
	nul-bytes or if the content is non-text and contains any 8bit
	octets, we need to use base64. Fixes bug #44344.
