2000-02-21  Dan Winship  <danw@helixcode.com>

	* camel-session.h:
	* camel-session.c: add CamelExceptions to several functions. Use
	camel_session_new to initialize the session and URL fields of
	created CamelStores as appropriate.

	* camel-store.h:
	* camel-store.c
	* camel-service.h:
	* camel-service.c: Move the session and url (and associated
	functions) from CamelStore to CamelService. Add url_flags to
	CamelService so subclasses can specify which URL components
	are mandatory for them.	Add camel_session_new for
	camel_session_get_store* to use.

	* providers/mbox/camel-mbox-folder.c:
	* providers/mbox/camel-mbox-store.c:
	* providers/mbox/camel-mbox-store.h: Update for above changes.

	* camel-exception-list.def: Once camel is being used for real,
	exceptions won't be renumberable. So renumber them now to make
	more room to add exceptions to the various categories later, and
	add a big warning message.

2000-02-20  Dan Winship  <danw@helixcode.com>

	* providers/mbox/Makefile.am: add libibex back to
	libcamelmbox_la_LIBADD

2000-02-18  NotZed  <NotZed@HelixCode.com>

	* providers/mbox/camel-mbox-search.h
	(camel_mbox_folder_search_by_expression): Added exception to call,
	and fixed caller.

	* providers/mbox/camel-mbox-search.c
	(camel_mbox_folder_search_by_expression): Major changes, to use
	the sexp evaluator from filter/filter-sexp.c to implement the
	searching.
	(func_body_contains): Changed to support multiple strings in 1
	command (results or'd together)

	* url-util.c (g_url_new): Fixed a typo (colon == 0 isn't right),
	and made it so full url's are absolute pathed (Dan, this is how it
	has to work!).  Also, always include a path part, even if it is an
	empty string.

2000-02-18  Dan Winship  <danw@helixcode.com>

	* camel/camel-types.h: New header with the typedefs for all camel
	classes. Now the class headers can just include this and the
	header for the parent type. This makes it possible for
	CamelService to include a CamelSession without creating an
	#include loop.

	* camel/*:	
	* composer/e-msg-composer-attachment-bar.h:
	* mail/folder-browser.c:
	* mail/message-list.c: frob #includes to match the new reality

2000-02-17  Dan Winship  <danw@helixcode.com>

	* camel/camel-service.h:
	* camel/camel-service.c: Make camel-service us a Gurl internally.
	Remove the login/password interfaces and instead provide
	camel_service_connect_with_url. Add CamelExceptions

2000-02-17  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-formatter.c (handle_text_plain): 
	(handle_text_html): use camel_stream_reset instead
	of seek. The formatter should be able to work 
	with all streams, not only seekable streams. 
	In the case where some provider implementation
	would not be able to provide a reset method 
	to their stream, implementors would have
	to find a workaround.

	* camel/camel-session.c (camel_session_new): use
	(void) instean of () in function decl.

	* camel/camel-folder.c: ifdef async operation 
	related code. 

	* camel/camel-seekable-stream.c (_seek): added a warning.
	(_reset): default implementation of reset for seekable
	stream.

	* camel/camel-mime-message.h: set_received_date declaration fix.
	cosmetic changes.

	* camel/providers/mbox/camel-mbox-provider.c (camel_provider_module_init): 
	use (void) instead of ().

	* camel/camel-stream.c (camel_stream_reset): 
	new method for CamelStream.

2000-02-17  Dan Winship  <danw@helixcode.com>

	* camel/url-util.c (g_url_to_string): New function to convert
	a Gurl back into a char *.

2000-02-17  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-formatter.c (handle_text_plain): 
	revamped so that it uses the output stream
	of the data wrapper
	(handle_text_html): ditto.
	
	
	* camel/camel-simple-data-wrapper.h: 
	* camel/camel-simple-data-wrapper.c (camel_simple_data_wrapper_new): 
	use (void) instead of ().
	(_get_output_stream): simple implementation. 

2000-02-16  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-data-wrapper.c (_set_input_stream): ref input stream
	(_set_output_stream): ref output stream
	(_finalize): unref input and output streams

	* camel/camel-seekable-substream.c (_set_bounds): don't
	seek the begining of the substream.
	(_eos): fix eos condition testing. 
	(_finalize): unref parent stream
	(_init_with_seekable_stream_and_bounds): ref parent stream

	* camel/gstring-util.c (g_string_equal_for_hash): 
	(g_string_equal_for_glist): return type is int.

	* camel/camel.h: 
	* camel/camel.c (camel_init): use (void) 
	instead of ().
	
2000-02-16  NotZed  <NotZed@HelixCode.com>

	* providers/mbox/Makefile.am (libcamelmbox_la_LIBADD): Added
	libfilter to link line (temporarily?).  Required for
	filter-sexp.

2000-02-15  bertrand  <bertrand@helixcode.com>

	* camel/camel-multipart.c (_localize_part): 
	this routine replaces the _read_part routine
	and does not store the part in a buffer. 
	(_set_input_stream): use the set_input_stream
	instead of the construct_from_stream.
	each bodypart is given an input stream. 

	* camel/camel-mime-part-utils.c: 
	include the data-wrapper-repository header. 
	(camel_mime_part_construct_content_from_stream): 
	use the set_input_stream instead of the 
	construct_from_stream method. 

	* camel/camel-seekable-substream.c (_set_bounds): 
	cur position is set to 0 not to inf_bound.

2000-02-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c: include gmime-base64.h
	various compilation and runtime fixes.
	(_set_input_stream): store the input substream 
	for the content object.

	* camel/camel-data-wrapper.h: declare the 
	set/get function on input/output stream.

	* camel/camel-mime-part.c (_get_content_object): 
	don't use a temporary mem stream. 	

	* camel/camel-seekable-substream.c (_seek): 
	(_eos): 
	(_read): the substream can be unlimited in length

	* camel/camel-data-wrapper.c (camel_data_wrapper_class_init): 
	set the get/set_input/output_stream methods. 	

	* camel/camel-multipart.c (_construct_from_stream): 
	camel_stream_seek -> camel_seekable_stream_seek

2000-02-14  Miguel de Icaza  <miguel@gnu.org>

	* camel/providers/mbox/Makefile.am (libcamelmbox_la_LIBADD): Add
	the unicode libraries as well.

	* camel/camel-provider.c (camel_provider_register_as_module): Add
	error reporting here.  Desire to use Solaris increases.  Hair loss
	in the last two hours: 5,400.

	* camel/providers/mbox/camel-mbox-provider.c
	(camel_mbox_get_provider): Renamed function.

	* camel/camel.h: All include files use camel/ now here.

	* camel/providers/mbox/Makefile.am: Drop all the dynamism from
	Camel, and make this a standard library.

2000-02-14  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (get_header_array_from_stream): use the 
	eos stream method. 
	(gmime_read_line_from_stream): ditto.

	* camel/camel-stream-fs.h (struct ): add the eof field
	cosmetics changes. 

	* camel/camel-stream-fs.c (camel_stream_fs_init): set eof.
	(_read): set eof on end of file.
	(_eos): implemented.

	* camel/gmime-utils.c (get_header_array_from_stream): 
	make a blocking version of the header parser. 
	When the fs stream uses gnome-vfs, this should
	be changed. 
	(gmime_read_line_from_stream): ditto. 

2000-02-11  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-stream-fs.c: 
	everywhere, when using the cur_pos field, do it
	on the CamelSeekableStream object.
	(_seek): small fix. 

	* camel/camel-seekable-stream.c (camel_seekable_stream_seek): 
	s/camel_stream_seek/camel_seekable_stream_seek/g

	* camel/camel-seekable-stream.h: 
	(struct ): added a field to store the
	current position.

	* camel/camel-seekable-stream.c (camel_seekable_stream_get_current_position): 
	New function. Allows to get the current position 
	of a seekable stream.
	

2000-02-13  NotZed  <notzed@zedzone.helixcode.com>

	* providers/mbox/camel-mbox-search.c: New file, implements the
	search api for mbox folders.

	* providers/mbox/Makefile.am: Link with ibex.

	* camel-folder.c (camel_folder_has_search_capability): Api
	additions.
	(camel_folder_search_by_expression): Ditto.

2000-02-12  NotZed  <notzed@zedzone.helixcode.com>

	* providers/mbox/camel-mbox-folder.c (_set_name): Setup index
	filename as well.
	(_init_with_store): Init index filename.  Hmm, none of these
	names ever seem to get free'd (FIXME?)

	* providers/mbox/camel-mbox-folder.h: Add index file name.

2000-02-12  NotZed  <notzed@helixcode.com>

	* camel-folder.h: Add folder search functions.

	** Created ChangeLog just for camel **
	 - refer to ../ChangeLog for changes prior to this date.
