<!-- ##### SECTION Title ##### -->
EBook

<!-- ##### SECTION Short_Description ##### -->
The primary Evolution addressbook client object.

<!-- ##### SECTION Long_Description ##### -->
<para>
Represents a complete addressbook. Event notifications and callbacks go to the
#EBookListener. Contrast with #EBookView, which represents a search of the addressbook.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#EBookView
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT EBook ##### -->
<para>
#EBook has no publicly available members.
</para>


<!-- ##### SIGNAL EBook::auth-required ##### -->
<para>
Authentication is required to access this source.  You should call
#e_book_authenticate_user or #e_book_async_authenticate_user.
</para>

@ebook: the object which received the signal.

<!-- ##### SIGNAL EBook::backend-died ##### -->
<para>
The backend for this address book has died.
</para>

@ebook: the object which received the signal.

<!-- ##### SIGNAL EBook::connection-status ##### -->
<para>
The connection status for this book is being reported.
</para>

@ebook: the object which received the signal.
@arg1: #TRUE if the connection is online, #FALSE otherwise.

<!-- ##### SIGNAL EBook::writable-status ##### -->
<para>
The writable status for this book is being reported.
</para>

@ebook: the object which received the signal.
@arg1: #TRUE if the book is writable, #FALSE otherwise.

<!-- ##### FUNCTION e_book_new ##### -->
<para>

</para>

@source: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_remove ##### -->
<para>

</para>

@book: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_supported_fields ##### -->
<para>

</para>

@book: 
@fields: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_supported_auth_methods ##### -->
<para>

</para>

@book: 
@auth_methods: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_authenticate_user ##### -->
<para>

</para>

@book: 
@user: 
@passwd: 
@auth_method: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_contact ##### -->
<para>

</para>

@book: 
@id: 
@contact: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_remove_contact ##### -->
<para>

</para>

@book: 
@id: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_remove_contacts ##### -->
<para>

</para>

@book: 
@ids: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_add_contact ##### -->
<para>

</para>

@book: 
@contact: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_commit_contact ##### -->
<para>

</para>

@book: 
@contact: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_book_view ##### -->
<para>

</para>

@book: 
@query: 
@requested_fields: 
@max_results: 
@book_view: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_contacts ##### -->
<para>

</para>

@book: 
@query: 
@contacts: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_changes ##### -->
<para>

</para>

@book: 
@changeid: 
@changes: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_free_change_list ##### -->
<para>

</para>

@change_list: 


<!-- ##### FUNCTION e_book_get_uri ##### -->
<para>

</para>

@book: 
@Returns: 


<!-- ##### FUNCTION e_book_get_static_capabilities ##### -->
<para>

</para>

@book: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_check_static_capability ##### -->
<para>

</para>

@book: 
@cap: 
@Returns: 


<!-- ##### FUNCTION e_book_is_writable ##### -->
<para>

</para>

@book: 
@Returns: 


<!-- ##### FUNCTION e_book_cancel ##### -->
<para>

</para>

@book: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_get_self ##### -->
<para>

</para>

@contact: 
@book: 
@error: 
@Returns: 


<!-- ##### FUNCTION e_book_set_self ##### -->
<para>

</para>

@book: 
@contact: 
@error: 
@Returns: 
<!-- # Unused Parameters # -->
@id: 


<!-- ##### FUNCTION e_book_is_self ##### -->
<para>

</para>

@contact: 
@Returns: 


<!-- ##### FUNCTION e_book_get_addressbooks ##### -->
<para>

</para>

@addressbook_sources: 
@error: 
@Returns: 


