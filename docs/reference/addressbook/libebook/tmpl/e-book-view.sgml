<!-- ##### SECTION Title ##### -->
EBookView

<!-- ##### SECTION Short_Description ##### -->
Represents a search against an EBook.

<!-- ##### SECTION Long_Description ##### -->
<para>
Event notifications and callbacks from EBookView go to the
#e-book-view-listener. Contrast EBookView with #e-book, which represents the
addressbook itself.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#e-book-view-listener, #e-book
</para>

<!-- ##### STRUCT EBookView ##### -->
<para>

</para>


<!-- ##### SIGNAL EBookView::contacts-added ##### -->
<para>
Fired when more contacts are found.  Each contact in the list will be unref'd
when done, and the list freed, so simply reference any contacts you want to
keep.
</para>

@ebookview: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL EBookView::contacts-changed ##### -->
<para>

</para>

@ebookview: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL EBookView::contacts-removed ##### -->
<para>

</para>

@ebookview: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL EBookView::sequence-complete ##### -->
<para>

</para>

@ebookview: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL EBookView::status-message ##### -->
<para>

</para>

@ebookview: the object which received the signal.
@arg1: 

<!-- ##### FUNCTION e_book_view_new ##### -->
<para>

</para>

@corba_book_view: 
@listener: 
@Returns: 


<!-- ##### FUNCTION e_book_view_set_book ##### -->
<para>

</para>

@book_view: 
@book: 


<!-- ##### FUNCTION e_book_view_start ##### -->
<para>

</para>

@book_view: 


<!-- ##### FUNCTION e_book_view_stop ##### -->
<para>

</para>

@book_view: 


